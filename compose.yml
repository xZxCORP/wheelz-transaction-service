services:
  app:
    build:
      context: .
      target: development
    ports:
      - '3000:3000'

    command: npm run dev
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - transaction-service-network
    develop:
      watch:
        - path: ./src
          target: /app/src
          action: sync
        - path: .env
          target: /app/.env
          action: sync+restart
        - path: package.json
          action: rebuild
        - path: package-lock.json
          action: rebuild
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - transaction-service-network
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'check_port_connectivity']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
volumes:
  rabbitmq_data:

networks:
  transaction-service-network:
    driver: bridge
